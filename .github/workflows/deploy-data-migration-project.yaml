name: Deploy data migration project workflow
run-name: Deploy ${{ inputs.build_type }} - ${{ inputs.name }}
permissions:
      id-token: write
      contents: read
on:
  workflow_call:
    inputs:
      build_type:
        description: "The type of project to build (service, package)"
        required: true
        type: string
      name:
        description: "The name of the package to build"
        required: true
        type: string
      python_version:
        description: 'The version of Python'
        required: true
        type: string
      commit_hash:
        description: "The commit hash, set by the CI/CD pipeline workflow"
        required: true
        type: string
      environment:
        description: "The deployment environment"
        required: true
        type: string
      repo_name:
        description: "The name of the Git repo"
        required: true
        type: string
      workspace:
          description: "The name of the workspace to deploy the infrastructure into"
          required: true
          type: string
      application_tag:
          description: "The application tag identifying the timeline in the repository to deploy from"
          required: false
          type: string
      type:
          description: "The type of permissions (e.g., account, app)"
          required: true
          type: string

jobs:
  deploy-project:
    name: "Deploy step for ${{ inputs.build_type }} - ${{ inputs.name }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Configure AWS Credentials"
        uses: ./.github/actions/configure-credentials
        with:
          aws_account_id: ${{ secrets.ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
          type: ${{ inputs.type }}

      - name: "Get directories"
        id: get-directories
        run: |
          if [[ "${{ inputs.build_type }}" == "service" ]]; then
            echo "working_directory=services/${{ inputs.name }}" >> $GITHUB_OUTPUT
            echo "build_directory=build/services/${{ inputs.name }}" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.build_type }}" == "package" ]]; then
            echo "working_directory=application/packages/${{ inputs.name }}" >> $GITHUB_OUTPUT
            echo "build_directory=build/packages/${{ inputs.name }}" >> $GITHUB_OUTPUT
          else
            echo "Invalid build type: ${{ inputs.build_type }}"
            exit 1
          fi

      - name: "Invoke DMS Replication Tasks"
        run: make invoke-replication-task
        working-directory: ${{ steps.get-directories.outputs.working_directory }}
        env:
          SERVICE: ${{ inputs.name }}
          PACKAGE: ${{ inputs.name }}
          COMMIT_HASH: ${{ inputs.commit_hash }}
          ENVIRONMENT: ${{ inputs.environment }}
          REPO_NAME: ${{ inputs.repo_name }}
          WORKSPACE: ${{ inputs.workspace }}
          APPLICATION_TAG: ${{ inputs.application_tag }}

      - name: "Invoke DMS Set Up Lambda"
        run: make invoke-lambda
        working-directory: ${{ steps.get-directories.outputs.working_directory }}
        env:
          SERVICE: ${{ inputs.name }}
          PACKAGE: ${{ inputs.name }}
          COMMIT_HASH: ${{ inputs.commit_hash }}
          ENVIRONMENT: ${{ inputs.environment }}
          REPO_NAME: ${{ inputs.repo_name }}
          WORKSPACE: ${{ inputs.workspace }}
          APPLICATION_TAG: ${{ inputs.application_tag }}
