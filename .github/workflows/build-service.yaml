name: Build service workflow

on:
  workflow_call:
    inputs:
      service_name:
        description: "The name of the service to build"
        required: true
        type: string
      python_version:
        description: 'The version of Python'
        required: true
        type: string
      commit_hash:
        description: "Commit hash, set by the CI/CD pipeline workflow"
        required: true
        type: string

jobs:
  build-service:
    name: "Build service - ${{ inputs.service_name }}"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: "Install asdf"
        uses: asdf-vm/actions/setup@v3.0.2
        with:
          asdf_branch: v0.15.0

      - name: "Cache asdf tools"
        id: asdf-cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: asdf-${{ runner.os }}-${{ hashFiles('.tool-versions') }}

      - name: "Install tools from .tool-versions"
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@v3.0.2

      - name: "Install project"
        run: cd services/${{ inputs.service_name }} && make install

      - name: "Run linting"
        run: cd services/${{ inputs.service_name }} && make lint

      - name: "Run unit tests"
        run: cd services/${{ inputs.service_name }} && make unit-test

      - name: "Build service"
        run:  |
          poetry self add poetry-plugin-export
          cd services/${{ inputs.service_name }} && make build
        env:
          SERVICE: ${{ inputs.service_name }}
          PYTHON_VERSION: ${{ inputs.python_version }}
          COMMIT_HASH: ${{ inputs.commit_hash }}

      - name: "Publish artefacts"
        uses: actions/upload-artifact@v4.6.1
        with:
          name: ${{ inputs.service_name }}-artefacts
          path: build/services/${{ inputs.service_name }}/
          if-no-files-found: error
