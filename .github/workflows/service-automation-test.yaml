name: service automation test workflow

on:
  workflow_call:

    inputs:
      environment:
        description: The relevant github environment (for secrets and variables)
        required: true
        type: string
      workspace:
        description: "The name of the workspace to deploy the application into"
        required: true
        type: string
      test_tag:
        description: "The name of the feature tag that identifies the tests to run"
        required: false
        type: string
      test_type:
        description: "The name of the type of test report that will be generated"
        required: false
        type: string
      tag:
        description: "The tag to build and deploy from"
        required: true
        default: ""
        type: string
      allure_report_retention:
        description: "The number of days to retain allure reports (in github)"
        required: false
        default: 10
        type: number
      workflow_timeout:
        description: "Timeout duration in minutes"
        required: false
        default: 5
        type: number
      type:
        description: "The type of permissions (e.g., account, app)"
        required: true
        type: string

jobs:
  service-automation-tests:
    name: "Run service automation tests"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Install asdf"
        uses: asdf-vm/actions/setup@v3.0.2
        with:
          asdf_branch: v0.15.0

      - name: "Cache asdf tools"
        id: asdf-cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf
          key: asdf-${{ runner.os }}-${{ hashFiles('.tool-versions') }}

      - name: "Install tools from .tool-versions"
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@v3.0.2

      - name: "Cache Poetry dependencies"
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('tests/service_automation/poetry.lock') }}

      - name: "Cache Playwright browsers"
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('tests/service_automation/poetry.lock') }}

      - name: Configure AWS Credentials
        uses: ./.github/actions/configure-credentials
        with:
          aws_account_id: ${{ secrets.ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}
          type: ${{ inputs.type }}

      - name: "Install project"
        run: make install
        working-directory: "tests/service_automation"

      - name: Run service automation test
        id: run-service_automation-tests
        uses: ./.github/actions/service-automation-test
        with:
          aws_region: ${{ vars.AWS_REGION }}
          environment: ${{ inputs.environment }}
          workspace: ${{ inputs.workspace }}
          test_tag: ${{ inputs.test_tag }}
          test_type: ${{ inputs.test_type }}

      - name: Upload allure report
        if: always()
        id: upload_allure_report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: tests/service_automation/allure-reports/index.html
          retention-days: ${{ inputs.allure_report_retention }}
