name: Code Quality Checks Workflow

on:
  workflow_call:
    inputs:
        environment:
          description: "The relevant github environment (for secrets and variables)"
          required: true
          type: string
        workspace:
          description: "The name of the workspace to validate the infrastructure against."
          required: true
          type: string
        tag:
          description: "The git tag to checkout or, if not passed in, the current branch"
          required: false
          type: string
        stacks:
          description: "The terraform stacks to be validated"
          required: true
          type: string
        code_directory:
          description: 'Directory that holds package json for react app '
          required: false
          type: string
          default: 'src/frontend'
        workflow_timeout:
          description: "Timeout duration in minutes"
          required: false
          default: 5
          type: number

jobs:
  scan-secrets:
    name: "Scan secrets"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is needed to scan all commits
      - name: "Scan secrets"
        uses: ./.github/actions/scan-secrets

  check-file-format:
    name: "Check file format"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is needed to compare branches
      - name: "Check file format"
        uses: ./.github/actions/check-file-format

  check-markdown-format:
    name: "Check Markdown format"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is needed to compare branches
      - name: "Check Markdown format"
        uses: ./.github/actions/check-markdown-format

  check-english-usage:
    name: "Check English usage"
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history is needed to compare branches
      - name: "Check English usage"
        uses: ./.github/actions/check-english-usage

  count-lines-of-code:
    name: "Count lines of code"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 2
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Count lines of code"
        uses: ./.github/actions/create-lines-of-code-report
        with:
          build_datetime: "${{ inputs.build_datetime }}"
          build_timestamp: "${{ inputs.build_timestamp }}"
          idp_aws_report_upload_account_id: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ACCOUNT_ID }}"
          idp_aws_report_upload_region: "${{ secrets.IDP_AWS_REPORT_UPLOAD_REGION }}"
          idp_aws_report_upload_role_name: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ROLE_NAME }}"
          idp_aws_report_upload_bucket_endpoint: "${{ secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT }}"

  scan-dependencies:
    name: "Scan dependencies"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    timeout-minutes: 2
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
      - name: "Scan dependencies"
        uses: ./.github/actions/scan-dependencies
        with:
          build_datetime: "${{ inputs.build_datetime }}"
          build_timestamp: "${{ inputs.build_timestamp }}"
          idp_aws_report_upload_account_id: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ACCOUNT_ID }}"
          idp_aws_report_upload_region: "${{ secrets.IDP_AWS_REPORT_UPLOAD_REGION }}"
          idp_aws_report_upload_role_name: "${{ secrets.IDP_AWS_REPORT_UPLOAD_ROLE_NAME }}"
          idp_aws_report_upload_bucket_endpoint: "${{ secrets.IDP_AWS_REPORT_UPLOAD_BUCKET_ENDPOINT }}"

  validate-terraform:
    name: "Validate Terraform"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    strategy:
      matrix:
        stack: ${{ fromJson(inputs.stacks) }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Configure AWS credentials"
        uses: ./.github/actions/configure-credentials
        with:
          aws_account_id: ${{ secrets.ACCOUNT_ID }}
          aws_region: ${{ vars.AWS_REGION }}

      - name: "Validate Terraform stack"
        uses: ./.github/actions/action-infrastructure-stack
        with:
          environment: ${{ inputs.environment }}
          workspace: ${{ inputs.workspace }}
          stack: ${{ matrix.stack }}
          action: validate

  check-terraform-format:
    name: "Check Terraform format"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Check format of Terraform code"
        uses: ./.github/actions/check-format-terraform

  checkov-scan:
    name: "Checkov scan"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    permissions:
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Checkov scan"
        id: "checkov"
        uses: bridgecrewio/checkov-action@v12
        with:
          soft_fail: true
          quiet: true
          output_format: sarif
          output_file_path: checkov.sarif

      - name: "Publish Checkov report"
        uses: actions/upload-artifact@v4.6.1
        with:
          name: "checkov.sarif"
          path: "."
          if-no-files-found: ignore

      - name : "Warn Checkov failure"
        if: ${{ steps.checkov.outcome == 'failure' }}
        run: echo "::warning::Checkov has encountered issues. Please check the checkov.sarif file for the issues identified"

  trivy-scan:
    name: "Trivy scan"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    permissions:
      contents: read
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Trivy scan"
        id: "trivy"
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy.sarif'
          scanners: vuln,misconfig

      - name: "Publish Trivy report"
        uses: actions/upload-artifact@v4.6.1
        with:
          name: "trivy.sarif"
          path: "."
          if-no-files-found: ignore

      - name : "Warn Trivy failure"
        if: ${{ steps.trivy.outcome == 'failure' }}
        run: echo "::warning::Trivy has encountered issues. Please check the trivy.sarif file for the issues identified"
