name: Metadata Workflow

on:
  workflow_call:
    inputs:
      tag:
        description: "The git tag to checkout, this defaults to the head of the triggering branch"
        required: false
        type: string
      workflow_timeout:
        description: "Timeout duration in minutes"
        required: false
        default: 5
        type: number
      environment:
        description: "Deployment environment"
        required: false
        default: "dev"
        type: string
    outputs:
      reponame:
        description: "The name of the code repo"
        value: ${{ jobs.echo-metadata.outputs.reponame }}
      workspace:
        description: "The name of the workspace that we interacting with"
        value: ${{ jobs.derive-workspace.outputs.workspace }}
      artefact_bucket_name:
        description: "The s3 bucket for domain artefacts"
        value: ${{ jobs.echo-metadata.outputs.artefact_bucket_name }}
      commit_hash:
        description: "The unique commit hash"
        value: ${{ jobs.echo-metadata.outputs.commit_hash }}
      artefact_commit_hash:
        description: "The unique commit hash for artefacts for flows triggered by a pull request"
        value: ${{ jobs.echo-metadata.outputs.artefact_commit_hash }}
      environment:
        description: "Derived deployment environment"
        value: ${{ jobs.set-environment.outputs.environment }}
      mgmt_environment:
        description: "Management environment"
        value: "mgmt"
      build_datetime_london:
        description: "The build date and time in London timezone"
        value: ${{ jobs.echo-metadata.outputs.build_datetime_london }}
      build_datetime:
        description: "The build date and time in the repository's default timezone"
        value: ${{ jobs.echo-metadata.outputs.build_datetime }}
      build_timestamp:
        description: "Timestamp of the build"
        value: ${{ jobs.echo-metadata.outputs.build_timestamp }}
      build_epoch:
        description: "Epoch time of the build"
        value: ${{ jobs.echo-metadata.outputs.build_epoch }}
      nodejs_version:
        description: "Version of Node.js used in the build"
        value: ${{ jobs.echo-metadata.outputs.nodejs_version }}
      python_version:
        description: "Version of Python used in the build"
        value: ${{ jobs.echo-metadata.outputs.python_version }}
      terraform_version:
        description: "Version of Terraform used in the build"
        value: ${{ jobs.echo-metadata.outputs.terraform_version }}
      version:
        description: "Version of the repository or application"
        value: ${{ jobs.echo-metadata.outputs.version }}
      account_type:
        description: "Type of account based on the environment"
        value: ${{ jobs.set-environment.outputs.account_type }}

jobs:
  echo-metadata:
    name: "Get Metadata"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    outputs:
      reponame: ${{ steps.get_metadata.outputs.reponame }}
      commit_hash: ${{ steps.get_metadata.outputs.commit_hash }}
      artefact_commit_hash: ${{ steps.get_metadata.outputs.artefact_commit_hash }}
      artefact_bucket_name: ${{ steps.get_metadata.outputs.artefact_bucket_name }}
      build_datetime_london: ${{ steps.get_metadata.outputs.build_datetime_london }}
      build_datetime: ${{ steps.get_metadata.outputs.build_datetime }}
      build_timestamp: ${{ steps.get_metadata.outputs.build_timestamp }}
      build_epoch: ${{ steps.get_metadata.outputs.build_epoch }}
      nodejs_version: ${{ steps.get_metadata.outputs.nodejs_version }}
      python_version: ${{ steps.get_metadata.outputs.python_version }}
      terraform_version: ${{ steps.get_metadata.outputs.terraform_version }}
      version: ${{ steps.get_metadata.outputs.version }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Get metadata"
        id: get_metadata
        uses: ./.github/actions/metadata

  derive-workspace:
    name: "Derive workspace"
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.workflow_timeout }}
    outputs:
      workspace: ${{ steps.derive_workspace.outputs.workspace }}
    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}

      - name: "Derive workspace"
        id: derive_workspace
        uses: ./.github/actions/derive-workspace

  set-environment:
    name: "Set environment"
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      account_type: ${{ steps.set-env.outputs.account_type }}
    steps:
      - name: "Determine environment"
        id: set-env
        run: |
          if [[ "${{ github.event.inputs.environment }}" != "" ]]; then
            environment="${{ github.event.inputs.environment }}"
          elif [[ "${{ github.event.label.name }}" == "Test Ready" ]]; then
            environment="test"
          elif [[ "${{ github.event.label.name }}" == "Int Ready" ]]; then
            environment="int"
          else
            # Handling pull request closed event
            if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.action }}" == "closed" ]]; then
              environment='["test", "int"]'
            # Handling branch deletion event
            elif [[ "${{ github.event_name }}" == "delete" && "${{ github.event.ref }}" =~ ^task/ ]]; then
              environment="dev"
            else
              environment="dev"
            fi
          fi

          # Determine account type based on environment
          # Handle JSON array environment (e.g. '["test", "int"]') as non-prod
          if [[ "$environment" == "dev" || "$environment" == "test" ]]; then
            account_type="dev"
          elif [[ "$environment" == "prod" ]]; then
            account_type="prod"
          else
            account_type="non-prod"
          fi

          # Output results
          echo "environment=$environment" >> $GITHUB_OUTPUT
          echo "account_type=$account_type" >> $GITHUB_OUTPUT

          echo "The determined environment is: $environment"
          echo "The determined account type is: $account_type"
  impacts:
    name: Impact Assessment
    runs-on: ubuntu-latest
    # if: github.event_name == 'pull_request'
    permissions:
      id-token: write
      contents: read
    outputs:
      impacts: ${{ steps.impacts.outputs.impacts }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Assess Codeowner changes
        id: impacts
        run: /bin/bash ./scripts/workflow/safeguard-codeowner-files.sh

