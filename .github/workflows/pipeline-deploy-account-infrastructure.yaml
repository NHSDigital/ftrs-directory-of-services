name: Pipeline Deploy Account Level Infrastructure

on:
  push:
    branches:
      - 'main'
      - 'task/**'
    paths:
      - 'infrastructure/stacks/account_wide/**'
      - 'infrastructure/stacks/terraform_management/**'
      - 'infrastructure/stacks/github_runner/**'
      - 'infrastructure/stacks/artefact_management/**'
      - 'infrastructure/stacks/account_policies/**'
      - 'infrastructure/stacks/domain_name/**'
      - 'infrastructure/modules/dynamodb/**'
      - 'infrastructure/modules/s3/**'
  workflow_dispatch:
    inputs:
      tag:
        description: "Specify the tag to be used for deployment"
        required: false
        type: string
      environment:
        description: "Deployment environment"
        required: true
        default: 'dev'
        type: choice
        options:
          - dev

jobs:
  metadata:
    name: "Get Metadata"
    uses: ./.github/workflows/metadata.yaml

  quality-checks:
    name: "Quality check"
    needs:
      - metadata
    uses: ./.github/workflows/quality-checks.yaml
    with:
      environment: ${{ needs.metadata.outputs.environment }}
      workspace: "default"
      stacks: "['terraform_management','account_wide','github_runner','artefact_management','account_policies']"
      type: account
    secrets: inherit

  deploy-account-infrastructure-plan:
    name: "Plan account level infrastructure deployment"
    needs:
      - metadata
      - quality-checks
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ needs.metadata.outputs.environment }}
      domain: ${{ needs.metadata.outputs.reponame }}
      workspace: "default"
      tag: ${{ inputs.tag }}
      stacks: "['terraform_management','github_runner','account_wide','account_policies','domain_name']"
      action: plan
      type: account
    secrets: inherit

  mgmt-deploy-account-infrastructure-plan:
    name: "Plan management account level infrastructure deployment"
    needs:
      - metadata
      - quality-checks
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ needs.metadata.outputs.mgmt_environment }}
      domain: ${{ needs.metadata.outputs.reponame }}
      workspace: "default"
      tag: ${{ inputs.tag }}
      stacks: "['terraform_management','github_runner', 'artefact_management','account_policies','domain_name']"
      action: plan
      type: account
    secrets: inherit

  manual-approval:
    name: "Manual approval for account level infrastructure deployment"
    if: ${{ github.ref == 'refs/heads/main' && (needs.deploy-account-infrastructure-plan.outputs.plan_result == 'true' || needs.mgmt-deploy-account-infrastructure-plan.outputs.plan_result == 'true') }}
    needs:
      - metadata
      - deploy-account-infrastructure-plan
      - mgmt-deploy-account-infrastructure-plan
    runs-on: ubuntu-latest
    environment: "${{ needs.metadata.outputs.environment }}-protected"
    steps:
      - name: Approval required
        run: echo "Deployment paused for manual approval. Please approve in the Actions tab."

  deploy-account-infrastructure-apply:
    name: "Deploy account level infrastructure"
    if: github.ref == 'refs/heads/main'
    needs:
      - metadata
      - manual-approval
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ needs.metadata.outputs.environment }}
      domain: ${{ needs.metadata.outputs.reponame }}
      workspace: "default"
      tag: ${{ inputs.tag }}
      stacks: "['terraform_management','github_runner','account_wide','account_policies','domain_name']"
      action: apply
      type: account
    secrets: inherit

  mgmt-deploy-account-infrastructure-apply:
    name: "Apply management account level infrastructure deployment"
    if: github.ref == 'refs/heads/main'
    needs:
      - metadata
      - manual-approval
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ needs.metadata.outputs.mgmt_environment }}
      domain: ${{ needs.metadata.outputs.reponame }}
      workspace: ${{ needs.metadata.outputs.workspace }}
      tag: ${{ inputs.tag }}
      stacks: "['terraform_management','github_runner', 'artefact_management','account_policies','domain_name']"
      action: apply
      type: account
    secrets: inherit

  slack-notifications:
    name: "Send Notification to Slack"
    needs:
      - metadata
      - quality-checks
      - manual-approval
      - deploy-account-infrastructure-plan
      - deploy-account-infrastructure-apply
      - mgmt-deploy-account-infrastructure-plan
      - mgmt-deploy-account-infrastructure-apply
    if: always()
    uses: ./.github/workflows/slack-notifications.yaml
    with:
      env: ${{ needs.metadata.outputs.environment }}
    secrets: inherit
