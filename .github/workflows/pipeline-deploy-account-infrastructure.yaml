name: Pipeline Deploy Account Level Infrastructure

on:
  push:
    branches:
      - "main"
      - "task/**"
    paths:
      - "infrastructure/stacks/account_wide/**"
      - "infrastructure/stacks/terraform_management/**"
      - "infrastructure/stacks/github_runner/**"
      - "infrastructure/stacks/artefact_management/**"
      - "infrastructure/stacks/account_policies/**"
      - "infrastructure/stacks/domain_name/**"
      - "infrastructure/modules/dynamodb/**"
      - "infrastructure/modules/s3/**"
  workflow_dispatch:
    inputs:
      tag:
        description: "Specify the tag to be used for deployment"
        required: false
        type: string
      environment:
        description: "Deployment environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - test
          - sandpit
          - int
          - prod

jobs:
  metadata:
    name: "Get Metadata"
    uses: ./.github/workflows/metadata.yaml

  quality-checks:
    name: "Quality check"
    needs:
      - metadata
    uses: ./.github/workflows/quality-checks.yaml
    with:
      environment: ${{ needs.metadata.outputs.environment }}
      workspace: "default"
      stacks: "['terraform_management','account_wide','github_runner','artefact_management','account_policies','domain_name']"
      type: account
    secrets: inherit

  plan-infrastructure:
    name: "Plan ${{ matrix.name }} infrastructure deployment for ${{ matrix.environment }}"
    needs:
      - metadata
      - quality-checks
    strategy:
      matrix:
        include:
          - name: "account"
            environment: ${{ needs.metadata.outputs.account_type }}
            stacks: "['github_runner','account_policies']"
          - name: "env"
            environment: ${{ needs.metadata.outputs.environment }}
            stacks: "['terraform_management','account_wide','domain_name']"
          - name: "mgmt"
            environment: ${{ needs.metadata.outputs.mgmt_environment }}
            stacks: "['terraform_management','github_runner','artefact_management','account_policies','domain_name']"
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ matrix.environment }}
      workspace: "default"
      tag: ${{ inputs.tag }}
      stacks: ${{ matrix.stacks }}
      action: plan
      type: account
    secrets: inherit

  manual-approval:
    name: "Manual approval for infrastructure deployment"
    if: ${{ github.ref == 'refs/heads/main' && (needs.plan-infrastructure.outputs.plan_result == 'true') }}
    needs:
      - metadata
      - plan-infrastructure
    runs-on: ubuntu-latest
    environment: "${{ needs.metadata.outputs.environment }}-protected"
    steps:
      - name: Approval required
        run: echo "Deployment paused for manual approval. Please approve in the Actions tab."

  apply-infrastructure:
    name: "Apply ${{ matrix.name }} infrastructure deployment for ${{ matrix.environment }}"
    if: github.ref == 'refs/heads/main'
    needs:
      - metadata
      - manual-approval
    strategy:
      matrix:
        include:
          - name: "account"
            environment: ${{ needs.metadata.outputs.account_type }}
            stacks: "['github_runner','account_policies']"
          - name: "env"
            environment: ${{ needs.metadata.outputs.environment }}
            stacks: "['terraform_management','account_wide','domain_name']"
          - name: "mgmt"
            environment: ${{ needs.metadata.outputs.mgmt_environment }}
            stacks: "['terraform_management','github_runner','artefact_management','account_policies','domain_name']"
    uses: ./.github/workflows/deploy-infrastructure.yaml
    with:
      environment: ${{ matrix.environment }}
      workspace: "default"
      tag: ${{ inputs.tag }}
      stacks: ${{ matrix.stacks }}
      action: apply
      type: account
    secrets: inherit

  slack-notifications:
    name: "Send Notification to Slack"
    needs:
      - metadata
      - quality-checks
      - plan-infrastructure
      - manual-approval
      - apply-infrastructure
    if: always()
    uses: ./.github/workflows/slack-notifications.yaml
    with:
      env: ${{ needs.metadata.outputs.environment }}
    secrets: inherit
