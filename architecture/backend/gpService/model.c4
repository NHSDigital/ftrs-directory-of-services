model {

  extend ftrs {

    restapi gpAPI "FTRS GP API" {
      description '
        Implements update business logic
        and exposes as REST API
      '
      style {
        icon tech:python
      }

      controller gpDataCommands "Commands" {
        description "Processes any GP updates on FTRS data"
        style {
          icon aws:lambda
        }

        component addGp "Add new GP" {
          description 'Adds a new GP to the FTRS database'
          style {
            icon aws:lambda
          }
        }
        component updateGp "Update GP" {
          description 'Updates an existing GP in the FTRS database'
          style {
            icon aws:lambda
          }
        }
        component deleteGp "Delete GP" {
          description 'Deletes an existing GP from the FTRS database'
          style {
            icon aws:lambda
          }
        }
      }

      controller gpDataQueries "Queries" {
        description "Processes any GP updates on FTRS data"
        style {
          icon aws:lambda
        }

        component getGp "Get GP" {
          description 'Gets a GP from the FTRS database'
          style {
            icon aws:lambda
          }
        }

        component getGps "Get GPs" {
          description 'Gets a list of GPs from the FTRS database'
          style {
            icon aws:lambda
          }
        }
      }
    }
  }

  apim.dosWriteProxy -> addGp "Proxies calls to"
  apim.dosWriteProxy -> updateGp "Proxies calls to"
  apim.dosWriteProxy -> deleteGp "Proxies calls to"
  apim.dosReadProxy -> getGp "Proxies calls to"
  apim.dosReadProxy -> getGps "Proxies calls to"

  addGp -> ftrs.assuranceQueue "Enqueues in"
  updateGp -> ftrs.assuranceQueue "Enqueues in"
  deleteGp -> ftrs.assuranceQueue "Enqueues in"

  getGp -> ftrs.db.orgTable "Reads from"
  getGps -> ftrs.db.orgTable "Reads from"
}