{
  "Version": "2012-10-17",
  "Statement": [
      {
          "Action": [
              "dynamodb:*",
              "dax:*",
              "application-autoscaling:DeleteScalingPolicy",
              "application-autoscaling:DeregisterScalableTarget",
              "application-autoscaling:DescribeScalableTargets",
              "application-autoscaling:DescribeScalingActivities",
              "application-autoscaling:DescribeScalingPolicies",
              "application-autoscaling:PutScalingPolicy",
              "application-autoscaling:RegisterScalableTarget",
              "cloudwatch:DeleteAlarms",
              "cloudwatch:DescribeAlarmHistory",
              "cloudwatch:DescribeAlarms",
              "cloudwatch:DescribeAlarmsForMetric",
              "cloudwatch:GetMetricStatistics",
              "cloudwatch:ListMetrics",
              "cloudwatch:PutMetricAlarm",
              "cloudwatch:GetMetricData",
              "datapipeline:ActivatePipeline",
              "datapipeline:CreatePipeline",
              "datapipeline:DeletePipeline",
              "datapipeline:DescribeObjects",
              "datapipeline:DescribePipelines",
              "datapipeline:GetPipelineDefinition",
              "datapipeline:ListPipelines",
              "datapipeline:PutPipelineDefinition",
              "datapipeline:QueryObjects",
              "ec2:DescribeVpcs",
              "ec2:DescribeSubnets",
              "ec2:DescribeSecurityGroups",
              "iam:GetRole",
              "iam:ListRoles",
              "kms:DescribeKey",
              "kms:ListAliases",
              "sns:CreateTopic",
              "sns:DeleteTopic",
              "sns:ListSubscriptions",
              "sns:ListSubscriptionsByTopic",
              "sns:ListTopics",
              "sns:Subscribe",
              "sns:Unsubscribe",
              "sns:SetTopicAttributes",
              "lambda:CreateFunction",
              "lambda:ListFunctions",
              "lambda:ListEventSourceMappings",
              "lambda:CreateEventSourceMapping",
              "lambda:DeleteEventSourceMapping",
              "lambda:GetFunctionConfiguration",
              "lambda:DeleteFunction",
              "resource-groups:ListGroups",
              "resource-groups:ListGroupResources",
              "resource-groups:GetGroup",
              "resource-groups:GetGroupQuery",
              "resource-groups:DeleteGroup",
              "resource-groups:CreateGroup",
              "tag:GetResources",
              "kinesis:ListStreams",
              "kinesis:DescribeStream",
              "kinesis:DescribeStreamSummary"
          ],
          "Effect": "Allow",
          "Resource": "*"
      },
      {
          "Action": "cloudwatch:GetInsightRuleReport",
          "Effect": "Allow",
          "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
      },
      {
          "Action": [
              "iam:PassRole"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Condition": {
              "StringLike": {
                  "iam:PassedToService": [
                      "application-autoscaling.amazonaws.com",
                      "application-autoscaling.amazonaws.com.cn",
                      "dax.amazonaws.com"
                  ]
              }
          }
      },
      {
          "Effect": "Allow",
          "Action": [
              "iam:CreateServiceLinkedRole"
          ],
          "Resource": "*",
          "Condition": {
              "StringEquals": {
                  "iam:AWSServiceName": [
                      "replication.dynamodb.amazonaws.com",
                      "dax.amazonaws.com",
                      "dynamodb.application-autoscaling.amazonaws.com",
                      "contributorinsights.dynamodb.amazonaws.com",
                      "kinesisreplication.dynamodb.amazonaws.com"
                  ]
              }
          }
      },
      {
        "Effect": "Allow",
        "Action": [
            "rds:*",
            "application-autoscaling:DeleteScalingPolicy",
            "application-autoscaling:DeregisterScalableTarget",
            "application-autoscaling:DescribeScalableTargets",
            "application-autoscaling:DescribeScalingActivities",
            "application-autoscaling:DescribeScalingPolicies",
            "application-autoscaling:PutScalingPolicy",
            "application-autoscaling:RegisterScalableTarget",
            "cloudwatch:DescribeAlarms",
            "cloudwatch:GetMetricStatistics",
            "cloudwatch:PutMetricAlarm",
            "cloudwatch:DeleteAlarms",
            "cloudwatch:ListMetrics",
            "cloudwatch:GetMetricData",
            "ec2:DescribeAccountAttributes",
            "ec2:DescribeAvailabilityZones",
            "ec2:DescribeCoipPools",
            "ec2:DescribeInternetGateways",
            "ec2:DescribeLocalGatewayRouteTablePermissions",
            "ec2:DescribeLocalGatewayRouteTables",
            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
            "ec2:DescribeLocalGateways",
            "ec2:DescribeSecurityGroups",
            "ec2:DescribeSubnets",
            "ec2:DescribeVpcAttribute",
            "ec2:DescribeVpcs",
            "ec2:GetCoipPoolUsage",
            "sns:ListSubscriptions",
            "sns:ListTopics",
            "sns:Publish",
            "logs:DescribeLogStreams",
            "logs:GetLogEvents",
            "outposts:GetOutpostInstanceTypes",
            "devops-guru:GetResourceCollection"
        ],
        "Resource": "*"
    },
    {
        "Effect": "Allow",
        "Action": "pi:*",
        "Resource": [
            "arn:aws:pi:*:*:metrics/rds/*",
            "arn:aws:pi:*:*:perf-reports/rds/*"
        ]
    },
    {
        "Effect": "Allow",
        "Action": "iam:CreateServiceLinkedRole",
        "Resource": "*",
        "Condition": {
            "StringLike": {
                "iam:AWSServiceName": [
                    "rds.amazonaws.com",
                    "rds.application-autoscaling.amazonaws.com"
                ]
            }
        }
    },
    {
        "Action": [
            "devops-guru:SearchInsights",
            "devops-guru:ListAnomaliesForInsight"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Condition": {
            "ForAllValues:StringEquals": {
                "devops-guru:ServiceNames": [
                    "RDS"
                ]
            },
            "Null": {
                "devops-guru:ServiceNames": "false"
            }
        }
    },
    {
      "Effect": "Allow",
      "Action": [
          "s3:*",
          "s3-object-lambda:*"
      ],
      "Resource": "*"
  }
  ]
}
