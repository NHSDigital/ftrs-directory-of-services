/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as OrganisationsIndexImport } from './routes/organisations/index'
import { Route as OrganisationsOrganisationIDIndexImport } from './routes/organisations/$organisationID/index'
import { Route as OrganisationsOrganisationIDEndpointsIndexImport } from './routes/organisations/$organisationID/endpoints/index'
import { Route as OrganisationsOrganisationIDEndpointsEndpointIDImport } from './routes/organisations/$organisationID/endpoints/$endpointID'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrganisationsIndexRoute = OrganisationsIndexImport.update({
  id: '/organisations/',
  path: '/organisations/',
  getParentRoute: () => rootRoute,
} as any)

const OrganisationsOrganisationIDIndexRoute =
  OrganisationsOrganisationIDIndexImport.update({
    id: '/organisations/$organisationID/',
    path: '/organisations/$organisationID/',
    getParentRoute: () => rootRoute,
  } as any)

const OrganisationsOrganisationIDEndpointsIndexRoute =
  OrganisationsOrganisationIDEndpointsIndexImport.update({
    id: '/organisations/$organisationID/endpoints/',
    path: '/organisations/$organisationID/endpoints/',
    getParentRoute: () => rootRoute,
  } as any)

const OrganisationsOrganisationIDEndpointsEndpointIDRoute =
  OrganisationsOrganisationIDEndpointsEndpointIDImport.update({
    id: '/organisations/$organisationID/endpoints/$endpointID',
    path: '/organisations/$organisationID/endpoints/$endpointID',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/organisations/': {
      id: '/organisations/'
      path: '/organisations'
      fullPath: '/organisations'
      preLoaderRoute: typeof OrganisationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/organisations/$organisationID/': {
      id: '/organisations/$organisationID/'
      path: '/organisations/$organisationID'
      fullPath: '/organisations/$organisationID'
      preLoaderRoute: typeof OrganisationsOrganisationIDIndexImport
      parentRoute: typeof rootRoute
    }
    '/organisations/$organisationID/endpoints/$endpointID': {
      id: '/organisations/$organisationID/endpoints/$endpointID'
      path: '/organisations/$organisationID/endpoints/$endpointID'
      fullPath: '/organisations/$organisationID/endpoints/$endpointID'
      preLoaderRoute: typeof OrganisationsOrganisationIDEndpointsEndpointIDImport
      parentRoute: typeof rootRoute
    }
    '/organisations/$organisationID/endpoints/': {
      id: '/organisations/$organisationID/endpoints/'
      path: '/organisations/$organisationID/endpoints'
      fullPath: '/organisations/$organisationID/endpoints'
      preLoaderRoute: typeof OrganisationsOrganisationIDEndpointsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/organisations': typeof OrganisationsIndexRoute
  '/organisations/$organisationID': typeof OrganisationsOrganisationIDIndexRoute
  '/organisations/$organisationID/endpoints/$endpointID': typeof OrganisationsOrganisationIDEndpointsEndpointIDRoute
  '/organisations/$organisationID/endpoints': typeof OrganisationsOrganisationIDEndpointsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/organisations': typeof OrganisationsIndexRoute
  '/organisations/$organisationID': typeof OrganisationsOrganisationIDIndexRoute
  '/organisations/$organisationID/endpoints/$endpointID': typeof OrganisationsOrganisationIDEndpointsEndpointIDRoute
  '/organisations/$organisationID/endpoints': typeof OrganisationsOrganisationIDEndpointsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/organisations/': typeof OrganisationsIndexRoute
  '/organisations/$organisationID/': typeof OrganisationsOrganisationIDIndexRoute
  '/organisations/$organisationID/endpoints/$endpointID': typeof OrganisationsOrganisationIDEndpointsEndpointIDRoute
  '/organisations/$organisationID/endpoints/': typeof OrganisationsOrganisationIDEndpointsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/organisations'
    | '/organisations/$organisationID'
    | '/organisations/$organisationID/endpoints/$endpointID'
    | '/organisations/$organisationID/endpoints'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/organisations'
    | '/organisations/$organisationID'
    | '/organisations/$organisationID/endpoints/$endpointID'
    | '/organisations/$organisationID/endpoints'
  id:
    | '__root__'
    | '/'
    | '/organisations/'
    | '/organisations/$organisationID/'
    | '/organisations/$organisationID/endpoints/$endpointID'
    | '/organisations/$organisationID/endpoints/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrganisationsIndexRoute: typeof OrganisationsIndexRoute
  OrganisationsOrganisationIDIndexRoute: typeof OrganisationsOrganisationIDIndexRoute
  OrganisationsOrganisationIDEndpointsEndpointIDRoute: typeof OrganisationsOrganisationIDEndpointsEndpointIDRoute
  OrganisationsOrganisationIDEndpointsIndexRoute: typeof OrganisationsOrganisationIDEndpointsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrganisationsIndexRoute: OrganisationsIndexRoute,
  OrganisationsOrganisationIDIndexRoute: OrganisationsOrganisationIDIndexRoute,
  OrganisationsOrganisationIDEndpointsEndpointIDRoute:
    OrganisationsOrganisationIDEndpointsEndpointIDRoute,
  OrganisationsOrganisationIDEndpointsIndexRoute:
    OrganisationsOrganisationIDEndpointsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/organisations/",
        "/organisations/$organisationID/",
        "/organisations/$organisationID/endpoints/$endpointID",
        "/organisations/$organisationID/endpoints/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/organisations/": {
      "filePath": "organisations/index.tsx"
    },
    "/organisations/$organisationID/": {
      "filePath": "organisations/$organisationID/index.tsx"
    },
    "/organisations/$organisationID/endpoints/$endpointID": {
      "filePath": "organisations/$organisationID/endpoints/$endpointID.tsx"
    },
    "/organisations/$organisationID/endpoints/": {
      "filePath": "organisations/$organisationID/endpoints/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
